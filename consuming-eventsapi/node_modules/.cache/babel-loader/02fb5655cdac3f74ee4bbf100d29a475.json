{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Frontend_training\\\\ReactProjects\\\\consuming-eventsapi\\\\src\\\\components\\\\events-edit.component.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\n\nconst validateForm = formErrors => {\n  let valid = true;\n  Object.values(formErrors).forEach( // if we have an error string set valid to false\n  val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nexport default class EventsEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n      console.log(this.state);\n      let formErrors = this.state.formErrors;\n\n      switch (name) {\n        case \"title\":\n          formErrors.title = value.length < 2 && value.length > 0 ? \"Title of the event cannot be empty\" : \"\";\n          console.log('title edited...');\n          break;\n\n        case \"description\":\n          formErrors.description = value.length < 6 && value.length > 0 ? \"Minimum 5 characters are required\" : \"\";\n          console.log('description edited...');\n          break;\n\n        case \"date\":\n          formErrors.date = value.length < 11 && value.length > 0 ? \"Minimum 10 characters are required for date\" : \"\";\n          console.log('date  changed...');\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => {\n        console.log(formErrors);\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const eve = {\n        id: this.props.match.params.id,\n        title: this.state.title,\n        description: this.state.description,\n        date: this.state.date\n      };\n      Axios.put('http://localhost:3001/events/' + eve.id, eve).then(result => {\n        console.log('Successfully edited...');\n        this.props.history.push('/events');\n      }).catch(error => console.log('There is some error :', error));\n\n      if (validateForm(this.state.formErrors)) {\n        console.info('Valid Form');\n      } else {\n        console.error('Invalid Form');\n      }\n    };\n\n    this.state = {\n      title: null,\n      description: null,\n      date: null,\n      formErrors: {\n        title: \"\",\n        description: \"\",\n        date: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('http://localhost:3001/events/' + this.props.match.params.id).then(result => {\n      this.setState({\n        eve: result.data,\n        title: result.data.title,\n        description: result.data.description,\n        date: result.data.date\n      });\n      console.log(this.state.log);\n    }).catch(error => console.log('There is some error : ', error));\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Edit Your Events Here\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"Event Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.title,\n      className: `form-control ${formErrors.title.length > 0 ? 'is-invalid' : null}`,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), formErrors.title.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 47\n      }\n    }, formErrors.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: this.state.description,\n      className: `form-control ${formErrors.description.length > 0 ? 'is-invalid' : null}`,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }), formErrors.description.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 53\n      }\n    }, formErrors.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"date\",\n      value: this.state.date,\n      className: `form-control ${formErrors.date.length > 0 ? 'is-invalid' : null}`,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), formErrors.date.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 46\n      }\n    }, formErrors.date)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/DELL/Documents/Frontend_training/ReactProjects/consuming-eventsapi/src/components/events-edit.component.js"],"names":["React","Component","Axios","validateForm","formErrors","valid","Object","values","forEach","val","length","EventsEdit","constructor","props","handleChange","event","preventDefault","name","value","target","setState","console","log","state","title","description","date","handleSubmit","eve","id","match","params","put","then","result","history","push","catch","error","info","componentDidMount","get","data","render"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\r\nimport Axios from \"axios\";\r\nconst validateForm = (formErrors) => {\r\n    let valid = true;\r\n    Object.values(formErrors).forEach(\r\n      // if we have an error string set valid to false\r\n      (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n}\r\nexport default class EventsEdit extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title:null,\r\n            description:null,\r\n            date:null,\r\n            formErrors: \r\n            {\r\n                title:\"\",\r\n                description:\"\",\r\n                date:\"\"\r\n            }\r\n        } \r\n    }\r\n\r\n    \r\n    componentDidMount()\r\n    {\r\n        \r\n        Axios.get('http://localhost:3001/events/'+this.props.match.params.id)\r\n        .then(result=>{\r\n            this.setState({\r\n                eve: result.data,\r\n                title: result.data.title,\r\n                description: result.data.description,\r\n                date:result.data.date\r\n            });\r\n            console.log(this.state.log);\r\n        })\r\n        .catch(error=>console.log('There is some error : ',error));\r\n    }\r\n\r\n    \r\n\r\n   \r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const{name,value}=event.target;\r\n        this.setState({\r\n            [name]:value\r\n        });\r\n        console.log(this.state);\r\n        let formErrors = this.state.formErrors;\r\n        switch(name)\r\n        {\r\n            case \"title\":\r\n              formErrors.title = value.length < 2 && value.length >0 ?\"Title of the event cannot be empty\":\"\";\r\n              console.log('title edited...')\r\n            break;\r\n            case \"description\":\r\n               formErrors.description = value.length < 6 && value.length >0 ?\"Minimum 5 characters are required\":\"\";\r\n              console.log('description edited...')\r\n            break;\r\n            case \"date\":\r\n                formErrors.date = value.length < 11 && value.length >0 ?\"Minimum 10 characters are required for date\":\"\";\r\n               console.log('date  changed...')\r\n            break;\r\n            default:\r\n           break;\r\n        }\r\n     this.setState({formErrors, [name]:value},()=>{console.log(formErrors)});\r\n    }\r\n\r\n\r\n       \r\n\r\n    handleSubmit = (event)=>\r\n    {\r\n            event.preventDefault();\r\n            const eve = {\r\n                id: this.props.match.params.id,\r\n                title : this.state.title,\r\n                description : this.state.description,\r\n                date:this.state.date\r\n            };\r\n            \r\n            Axios.put('http://localhost:3001/events/'+ eve.id,eve)\r\n            .then(result => {\r\n                console.log('Successfully edited...')\r\n                this.props.history.push('/events');\r\n            })\r\n            .catch(error => console.log('There is some error :', error));\r\n\r\n            if(validateForm(this.state.formErrors)) {\r\n                console.info('Valid Form')\r\n              }else{\r\n                console.error('Invalid Form')\r\n              }\r\n           \r\n    }\r\n       \r\n   \r\n    render()\r\n    {\r\n        const {formErrors}=this.state;\r\n        return(\r\n        <div>\r\n            <h2>Edit Your Events Here</h2>\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Event Title</label>\r\n                <input type=\"text\" name=\"title\" value={this.state.title} className={`form-control ${formErrors.title.length > 0 ? 'is-invalid' : null}`} onChange={this.handleChange}/>\r\n                {formErrors.title.length>0 && <span>{formErrors.title}</span>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input type=\"text\" name=\"description\" value={this.state.description} className={`form-control ${formErrors.description.length > 0 ? 'is-invalid' : null}`} onChange={this.handleChange}/>\r\n                {formErrors.description.length>0 && <span>{formErrors.description}</span>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"text\" name=\"date\" value={this.state.date} className={`form-control ${formErrors.date.length > 0 ? 'is-invalid' : null}`} onChange={this.handleChange}/>\r\n                {formErrors.date.length>0 && <span>{formErrors.date}</span>}\r\n                </div>\r\n                <button className=\"btn btn-secondary\">Submit</button>\r\n            </form>\r\n            </div>\r\n        \r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}